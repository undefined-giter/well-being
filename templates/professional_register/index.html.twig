{% extends 'base.html.twig' %}

{% block title %}Professional Registration{% endblock %}

{% block map_head %}
<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
<script>
/**
* @license
* Copyright 2019 Google LLC. All Rights Reserved.
* SPDX-License-Identifier: Apache-2.0
*/
let map;
let marker;
let geocoder;
let responseDiv;
let response;

function initMap() {
    map = new google.maps.Map(document.getElementById("map"), {
    zoom: 8,
    center: { lat: 45.7640, lng: 4.8357 },
    mapTypeControl: false,
    });
    geocoder = new google.maps.Geocoder();

    const inputText = document.createElement("input");

    inputText.type = "text";
    inputText.placeholder = "Enter a location";

    const submitButton = document.createElement("input");

    submitButton.type = "button";
    submitButton.value = "Geocode";
    submitButton.classList.add("button", "button-primary");

    const clearButton = document.createElement("input");

    clearButton.type = "button";
    clearButton.value = "Clear";
    clearButton.classList.add("button", "button-secondary");
    response = document.createElement("pre");
    response.id = "response";
    response.innerText = "";
    responseDiv = document.createElement("div");
    responseDiv.id = "response-container";
    responseDiv.appendChild(response);

    const instructionsElement = document.createElement("p");

    instructionsElement.id = "instructions";
    instructionsElement.innerHTML =
    "<strong>Instructions</strong>: Enter an address in the textbox to geocode or click on the map to reverse geocode.";
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(inputText);
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(submitButton);
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(clearButton);
    map.controls[google.maps.ControlPosition.LEFT_TOP].push(
    instructionsElement
    );
    map.controls[google.maps.ControlPosition.LEFT_TOP].push(responseDiv);
    marker = new google.maps.Marker({
    map,
    });
    map.addListener("click", (e) => {
    geocode({ location: e.latLng });
    });
    submitButton.addEventListener("click", () =>
    geocode({ address: inputText.value })
    );
    clearButton.addEventListener("click", () => {
    clear();
    });
    clear();
}

function clear() {
    marker.setMap(null);
}

function geocode(request) {
    clear();
    geocoder
    .geocode(request)
    .then((result) => {
        const { results } = result;

        map.setCenter(results[0].geometry.location);
        marker.setPosition(results[0].geometry.location);
        marker.setMap(map);
        response.innerText = JSON.stringify(result, null, 2);
        return results;
    })
    .catch((e) => {
        alert("Geocode was not successful for the following reason: " + e);
    });
}

window.initMap = initMap;
</script>
<style>
    #map {
    height: 100%;
    }

    html,
    body {
    height: 100%;
    margin: 0;
    padding: 0;
    }

    input[type="text"] {
    background-color: #fff;
    border: 0;
    border-radius: 2px;
    box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
    margin: 10px;
    padding: 0 0.5em;
    font: 400 18px Roboto, Arial, sans-serif;
    overflow: hidden;
    line-height: 40px;
    margin-right: 0;
    min-width: 25%;
    }

    input[type="button"] {
    background-color: #fff;
    border: 0;
    border-radius: 2px;
    box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
    margin: 10px;
    padding: 0 0.5em;
    font: 400 18px Roboto, Arial, sans-serif;
    overflow: hidden;
    height: 40px;
    cursor: pointer;
    margin-left: 5px;
    }
    input[type="button"]:hover {
    background: rgb(235, 235, 235);
    }
    input[type="button"].button-primary {
    background-color: #1a73e8;
    color: white;
    }
    input[type="button"].button-primary:hover {
    background-color: #1765cc;
    }
    input[type="button"].button-secondary {
    background-color: white;
    color: #1a73e8;
    }
    input[type="button"].button-secondary:hover {
    background-color: #d2e3fc;
    }

    #response-container {
    background-color: #fff;
    border: 0;
    border-radius: 2px;
    box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
    margin: 10px;
    padding: 0 0.5em;
    font: 400 18px Roboto, Arial, sans-serif;
    overflow: hidden;
    overflow: auto;
    max-height: 50%;
    max-width: 90%;
    background-color: rgba(255, 255, 255, 0.95);
    font-size: small;
    }

    #instructions {
    background-color: #fff;
    border: 0;
    border-radius: 2px;
    box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
    margin: 10px;
    padding: 0 0.5em;
    font: 400 18px Roboto, Arial, sans-serif;
    overflow: hidden;
    padding: 1rem;
    font-size: medium;
    }
</style>
{% endblock %}

{% block body %}

<div class="container">
    <h1 class='text-center'>Professional Registration</h1>

    <div class="row">
        <div class="col-md-6 offset-md-3">
            {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}
            {{ form_row(form.first_name, {'attr': {'class': 'form-control mb-3', 'placeholder': 'First Name'}}) }}
            {{ form_row(form.last_name, {'attr': {'class': 'form-control mb-3', 'placeholder': 'Last Name'}}) }}
            {{ form_row(form.email, {'attr': {'class': 'form-control mb-3', 'placeholder': 'Email'}}) }}
            {{ form_row(form.password, {'attr': {'class': 'form-control mb-3', 'placeholder': 'Password'}}) }}
            {{ form_row(form.picture, {'attr': {'class': 'form-control mb-3'}}) }}
            {{ form_row(form.description, {'attr': {'class': 'form-control mb-3', 'rows': '4', 'placeholder': 'Description'}}) }}
            {{ form_row(form.specialization, {'label_attr': {'class': 'd-block'}, 'attr': {'class': 'form-control mb-3', 'style': 'height: 200px; display: inline-block; vertical-align: top;'}}) }}
            {{ form_row(form._token) }}
            <div style="text-align: right; margin-right: 20px">
                {{ form_row(form.save) }}
            </div>
            {{ form_end(form) }}

            <div id="map" style='height:350px'></div>
        </div>
    </div>
</div>

{% endblock %}


{% block js %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var otherSpecializationCheckbox = document.querySelector('.other-specialization-checkbox');
        var otherSpecializationField = document.querySelector('.other-specialization-field');

        otherSpecializationCheckbox.addEventListener('change', function () {
            if (otherSpecializationCheckbox.checked) {
                otherSpecializationField.style.display = 'inline';
            } else {
                otherSpecializationField.style.display = 'none';
            }
        });
    });
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBYE8CgVnJNKc95YAKb0abmU0eeaoT9MnE&callback=initMap&v=weekly&solution_channel=GMP_CCS_geocodingservice_v1" defer></script>
{% endblock %}
